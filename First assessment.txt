SELECT * FROM employees;
SELECT * FROM departments;
SELECT * FROM dept_emp;
SELECT * FROM dept_manager;
SELECT * FROM salaries;
SELECT * FROM titles;


1      Create an SQL statement that lists all managers and their title

CREATE OR REPLACE VIEW manager_title AS 
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, title, e.emp_no
FROM employees e
INNER JOIN dept_manager dm ON dm.emp_no = e.emp_no
INNER JOIN titles t ON t.emp_no = e.emp_no;

SELECT * FROM manager_title;

Analysing the data I think this should be returning 8 rows, however it is only returning 4. On further inspection of the tables I can see that the titles table seems to have errors, with duplicated employee numbers (emp_no), there are also 14 employees and only 11 rows for title, so 3 employees are missing titles. 



2     Create a SQL statement to show the salary of all employees and their department name.

CREATE OR REPLACE VIEW employees_dept AS 
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, dept_name, e.emp_no, s.salary
FROM employees e
INNER JOIN dept_emp demp ON demp.emp_no = e.emp_no
INNER JOIN salaries s ON e.emp_no = s.emp_no
INNER JOIN departments d ON d.dept_no = demp.dept_no;

SELECT * FROM employees_dept;


Again in this case there is missing information, only 7 employees are accounted for in the dept_emp table meaning only 7 employees are listed in the joined table furthermore there is a duplicate employee number in the salaries table meaning there are only 7 valid entries (8 entries in total, 1 unaccounted for).



3      Create a SQL statement to show the hire date and birth date who belongs to HR department.

CREATE OR REPLACE VIEW hr_bday AS
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, e.birth_date, e.hire_date, d.dept_name, demp.dept_no
FROM employees e
INNER JOIN dept_emp demp ON demp.emp_no = e.emp_no
INNER JOIN departments d ON d.dept_no = demp.dept_no
WHERE d.dept_no = 'd003'
UNION ALL 
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, e.birth_date, e.hire_date, d.dept_name, dman.dept_no
FROM employees e
INNER JOIN dept_manager dman ON dman.emp_no = e.emp_no
INNER JOIN departments d ON d.dept_no = dman.dept_no
WHERE d.dept_no = 'd003';

SELECT * FROM hr_bday;


(alternatively for the WHERE statement; WHERE d.dept_name = 'Human Resources'

I had to choose the information from two seperate tables 'dept_manager' and 'dept_emp' as they were the only tables that had human resources members in there. The table 'titles' has no human resource member, facilitating the need for 2 INNER JOINS and a UNION to two tables to gather all the relevent 



4      Create a SQL statement to show all departments and their department’s managers.

CREATE OR REPLACE VIEW dept_info AS
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, dep.dept_name, dman.dept_no
FROM employees e
INNER JOIN dept_manager dman ON dman.emp_no = e.emp_no
INNER JOIN departments dep ON dep.dept_no = dman.dept_no;

SELECT * FROM dept_info;

Some departments are missing managers and others have more than one manager in the dataset, so not every department is accounted for. Also many people listed as managers are also listed as employees based on their employee numbers - some ar also tied to multiple departments. 



5      Create a SQL statement to show a list of HR’s employees who were hired after 1986

CREATE OR REPLACE VIEW hr_hire_date AS
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, demp.from_date, d.dept_name, demp.dept_no
FROM employees e
INNER JOIN dept_emp demp ON demp.emp_no = e.emp_no
INNER JOIN departments d ON d.dept_no = demp.dept_no
WHERE demp.from_date > '1986-01-01'
	AND d.dept_name = 'Human Resources'
UNION ALL 
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, dman.from_date, d.dept_name, dman.dept_no
FROM employees e
INNER JOIN dept_manager dman ON dman.emp_no = e.emp_no
INNER JOIN departments d ON d.dept_no = dman.dept_no
WHERE dman.from_date > '1986-01-01'
	AND d.dept_name = 'Human Resources';

SELECT * FROM hr_hire_date;

The people listed as HR employees all have hire dates starting later than 1986 according to the employees table, however the start date is different according to the 'from_date' columns so I am using the 'from_date' from the respective dept_emp and dept_manager tables as I assume they may have changed roles and been a HR employee later.



6      Create a SQL statement to increase any employee’s salary up to 2%. Assume the employee has just phoned in with his/her last name.


CREATE OR REPLACE VIEW pay_rise AS
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, salary as salary_old, salary as salary_new
